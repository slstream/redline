/*
 * SPDX-License-Identifier: GPL-2.0-only
 */

#include "ns3/applications-module.h"
#include "ns3/core-module.h"
#include "ns3/csma-module.h"
#include "ns3/internet-module.h"
#include "ns3/ipv4-global-routing-helper.h"
#include "ns3/network-module.h"
#include "ns3/point-to-point-module.h"
#include "ns3/netanim-module.h"

// Default Network Topology
//
//       10.1.1.0
// n0 -------------- n1   n2   n3   n4
//    point-to-point  |    |    |    |
//                    ================
//                      LAN 10.1.2.0

using namespace ns3;

NS_LOG_COMPONENT_DEFINE("SecondScriptExample");

int
main(int argc, char* argv[])
{
    bool verbose = true;
    uint32_t nCsma = 3;

    CommandLine cmd(__FILE__);
    cmd.AddValue("nCsma", "Number of \"extra\" CSMA nodes/devices", nCsma);
    cmd.AddValue("verbose", "Tell echo applications to log if true", verbose);

    cmd.Parse(argc, argv);

    if (verbose)
    {
        LogComponentEnable("UdpEchoClientApplication", LOG_LEVEL_INFO);
        LogComponentEnable("UdpEchoServerApplication", LOG_LEVEL_INFO);
    }

    nCsma = nCsma == 0 ? 1 : nCsma;

    NodeContainer p2pNodes;
    p2pNodes.Create(2);

    NodeContainer csmaNodes;
    csmaNodes.Add(p2pNodes.Get(1));
    csmaNodes.Create(nCsma);

    PointToPointHelper pointToPoint;
    pointToPoint.SetDeviceAttribute("DataRate", StringValue("10Mbps"));
    pointToPoint.SetChannelAttribute("Delay", StringValue("3ms"));

    NetDeviceContainer p2pDevices;
    p2pDevices = pointToPoint.Install(p2pNodes);

    CsmaHelper csma;
    csma.SetChannelAttribute("DataRate", StringValue("275Mbps"));
    csma.SetChannelAttribute("Delay", TimeValue(NanoSeconds(500)));

    NetDeviceContainer csmaDevices;
    csmaDevices = csma.Install(csmaNodes);

    InternetStackHelper stack;
    stack.Install(p2pNodes.Get(0));
    stack.Install(csmaNodes);

    Ipv4AddressHelper address;
    address.SetBase("10.1.1.0", "255.255.255.0");
    Ipv4InterfaceContainer p2pInterfaces;
    p2pInterfaces = address.Assign(p2pDevices);

    address.SetBase("10.1.2.0", "255.255.255.0");
    Ipv4InterfaceContainer csmaInterfaces;
    csmaInterfaces = address.Assign(csmaDevices);

    UdpEchoServerHelper echoServer(8080);

    ApplicationContainer serverApps = echoServer.Install(csmaNodes.Get(2));
    serverApps.Start(Seconds(1.0));
    serverApps.Stop(Seconds(10.0));

    UdpEchoClientHelper echoClient(csmaInterfaces.GetAddress(2), 8080);
    echoClient.SetAttribute("MaxPackets", UintegerValue(2));
    echoClient.SetAttribute("Interval", TimeValue(Seconds(1.0)));
    echoClient.SetAttribute("PacketSize", UintegerValue(2048));

    ApplicationContainer clientApps = echoClient.Install(p2pNodes.Get(0));
    clientApps.Start(Seconds(2.0));
    clientApps.Stop(Seconds(10.0));

    Ipv4GlobalRoutingHelper::PopulateRoutingTables();

    pointToPoint.EnablePcapAll("second");
    csma.EnablePcap("csma", csmaDevices.Get(1), true);
    csma.EnablePcap("p2p", p2pDevices.Get(0), true);
    
    AnimationInterface anim("assignment03.xml");
    anim.SetConstantPosition(p2pNodes.Get(0),10.0,10.0);
    anim.SetConstantPosition(p2pNodes.Get(1),30.0,20.0);
    anim.SetConstantPosition(csmaNodes.Get(1),80.0,30.0);
    anim.SetConstantPosition(csmaNodes.Get(2),50.0,40.0);
    anim.SetConstantPosition(csmaNodes.Get(3),20.0,50.0);
    
    AsciiTraceHelper ascii;
    pointToPoint.EnableAsciiAll(ascii.CreateFileStream("p2p.tr"));
    csma.EnableAsciiAll(ascii.CreateFileStream("csma.tr"));
    
    
    Simulator::Run();
    Simulator::Destroy();
    return 0;
}

./ns3 run scratch/second.cc
./netAnim

-------------------------------------------------------------------
ls
tracemetric>>>
lib  README.TXT  tracemetrics.jar
java -jar tracemetrics.jar

--------------------------------------------------------------------
1              34.5          45           12000
2              36.4          34           24000
3              38.7          22           34000
4              32.3          20           40000
5              41.5          24           23456
6              35.6          36           12345
7              24.5          67           67678
8              56.7          54           32123
9              62.3          27           45678
10             65.4          33            8999



set terminal pdf
set output "data.pdf"
set title "mydata"
set xlabel "No of days "
set ylabel "speed "
plot "data.txt" using 1:2 with linespoint title "speed" lt 4
set ylabel "salary  "
replot "data.txt" using 1:4 with lines title "salary"

set terminal png size 600 ,400
set output "data.png"
set title "mydata"
set xlabel "No of days "
set ylabel "speed "
plot "data.txt" using 1:2 with lines title "speed"

----------------------------------------------------------------------
city               AQI last               AQI current
jaffna               116                      100
nuwara               100                       35
negambo              120                       80
colombo              68                        70
hapugoda             56                        34
kandy                34                        23
rathnapura           45                        18


set terminal pdf
set output "myhistogram.pdf"
set title "AQI VALUES"
set boxwidth 0.4
set style fill solid
set xlabel "city"
set ylabel "AQI"
set grid ytics
set xtics rotate by 0 font ",8" nomirror
plot "mydata.txt" using 2:xtic(1) title "aqi current" with boxes lc rgb "blue" ,\
     "" using 3:xtic(1) title "aqi last " with boxes lc rgb "red"
\\\\\\\\
set style data histrogram
plot "mydata.txt" using 2:xtic(1) title "aqi current" with boxes lc rgb "blue" ,\
     "" using 3 title "aqi last " with boxes lc rgb "red"
